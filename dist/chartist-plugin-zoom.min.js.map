{"version":3,"sources":["chartist-plugin-zoom.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","defaultOptions","pointClipOffset","noClipY","autoZoomY","high","low","plugins","zoom","options","extend","chart","copyTouch","touch","p","position","svg","id","identifier","ongoingTouchIndexById","idToFind","i","ongoingTouches","length","onTouchStart","event","touches","changedTouches","push","rect","attr","getRect","show","onTouchMove","idx","splice","preventDefault","onTouchCancel","removeTouches","onTouchEnd","zoomIn","hide","onMouseDown","button","point","isInRect","chartRect","downPosition","x","x1","x2","y","y2","y1","onMouseUp","resetOnRightMouseBtn","reset","width","height","Math","max","min","axisX","highLow","project","axisY","x_low","x_high","max_y","min_y","series","data","points","l","binarySearch_x","j","prev_j","update","onZoom","onMouseMove","style","firstPoint","secondPoint","transform","clientX","clientY","svgElement","tagName","ownerSVGElement","matrix","getScreenCTM","createSVGPoint","matrixTransform","inverse","value","axis","bounds","scale","type","base","pow","baseLog","axisLength","range","val","log","ar","el","m","n","k","Line","on","mask","element","clip-path","addMask","offset","defs","elem","fill","handler","addEventListener","_node","querySelector"],"mappings":"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","file":"chartist-plugin-zoom.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.zoom'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js zoom plugin.\n   * \n   */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      // onZoom\n      // resetOnRightMouseBtn\n      pointClipOffset: 5,\n      noClipY: false,\n      autoZoomY: {high: false, low: false},\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.zoom = function (options) {\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function zoom(chart) {\n        if (!(chart instanceof Chartist.Line)) {\n          return;\n        }\n\n        var rect, svg, axisX, axisY, chartRect;\n        var downPosition;\n        var onZoom = options.onZoom;\n        var ongoingTouches = [];\n        if(options.autoZoomY === true){\n          options.autoZoomY = {high: true, low: true};\n        }\n\n        chart.on('draw', function (data) {\n          var type = data.type;\n          var mask = type === 'point' ? 'point-mask' : 'line-mask';\n          if (type === 'line' || type === 'bar' || type === 'area' || type === 'point') {\n            data.element.attr({ 'clip-path': 'url(#' + mask + ')' });\n          }\n        });\n\n        chart.on('created', function (data) {\n          axisX = data.axisX;\n          axisY = data.axisY;\n          chartRect = data.chartRect;\n          svg = data.svg._node;\n          rect = data.svg.elem('rect', {\n            x: 10,\n            y: 10,\n            width: 100,\n            height: 100,\n          }, 'ct-zoom-rect');\n          hide(rect);\n\n          var defs = data.svg.querySelector('defs') || data.svg.elem('defs');\n          var width = chartRect.width();\n          var height = chartRect.height();\n\n          function addMask(id, offset) {\n            defs\n              .elem('clipPath', {\n                id: id\n              })\n              .elem('rect', {\n                x: chartRect.x1 - offset,\n                y: chartRect.y2 - offset,\n                width: width + offset + offset,\n                height: height + offset + offset,\n                fill: 'white'\n              });\n          }\n          addMask('line-mask', 0);\n          addMask('point-mask', options.pointClipOffset);\n\n          function on(event, handler) {\n            svg.addEventListener(event, handler);\n          }\n\n          on('mousedown', onMouseDown);\n          on('mouseup', onMouseUp);\n          on('mousemove', onMouseMove);\n          on('touchstart', onTouchStart);\n          on('touchmove', onTouchMove);\n          on('touchend', onTouchEnd);\n          on('touchcancel', onTouchCancel);\n        });\n\n\n\n        function copyTouch(touch) {\n          var p = position(touch, svg);\n          p.id = touch.identifier;\n          return p;\n        }\n\n        function ongoingTouchIndexById(idToFind) {\n          for (var i = 0; i < ongoingTouches.length; i++) {\n            var id = ongoingTouches[i].id;\n            if (id === idToFind) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function onTouchStart(event) {\n          var touches = event.changedTouches;\n          for (var i = 0; i < touches.length; i++) {\n            ongoingTouches.push(copyTouch(touches[i]));\n          }\n\n          if (ongoingTouches.length > 1) {\n            rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\n            show(rect);\n          }\n        }\n\n        function onTouchMove(event) {\n          var touches = event.changedTouches;\n          for (var i = 0; i < touches.length; i++) {\n            var idx = ongoingTouchIndexById(touches[i].identifier);\n            ongoingTouches.splice(idx, 1, copyTouch(touches[i]));\n          }\n\n          if (ongoingTouches.length > 1) {\n            rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\n            show(rect);\n            event.preventDefault();\n          }\n        }\n\n        function onTouchCancel(event) {\n          removeTouches(event.changedTouches);\n        }\n\n        function removeTouches(touches) {\n          for (var i = 0; i < touches.length; i++) {\n            var idx = ongoingTouchIndexById(touches[i].identifier);\n            if (idx >= 0) {\n              ongoingTouches.splice(idx, 1);\n            }\n          }\n        }\n\n        function onTouchEnd(event) {\n          if (ongoingTouches.length > 1) {\n            zoomIn(getRect(ongoingTouches[0], ongoingTouches[1]));\n          }\n          removeTouches(event.changedTouches);\n          hide(rect);\n        }\n\n        function onMouseDown(event) {\n          if (event.button === 0) {\n            var point = position(event, svg);\n            if (isInRect(point, chartRect)) {\n              downPosition = point;\n              rect.attr(getRect(downPosition, downPosition));\n              show(rect);\n              event.preventDefault();\n            }\n          }\n        }\n\n        function isInRect(point, rect) {\n          return point.x >= rect.x1 && point.x <= rect.x2 && point.y >= rect.y2 && point.y <= rect.y1;\n        }\n\n        var reset = function () {\n          chart.options.axisX.highLow = null;\n          chart.options.axisY.highLow = null;\n          chart.update(chart.data, chart.options);\n        };\n\n        function onMouseUp(event) {\n          if (event.button === 0 && downPosition) {\n            var box = getRect(downPosition, position(event, svg));\n            zoomIn(box);\n            downPosition = null;\n            hide(rect);\n          }\n          else if (options.resetOnRightMouseBtn && event.button === 2) {\n            reset();\n            event.preventDefault();\n          }\n        }\n\n        function zoomIn(rect) {\n          if (rect.width > 5 && rect.height > 5) {\n              var x1 = Math.max(0, rect.x - chartRect.x1);\n              var x2 = Math.min(chartRect.width(), x1 + rect.width);\n              var y2 = Math.min(chartRect.height(), chartRect.y1 - rect.y);\n              var y1 = Math.max(0, y2 - rect.height);\n\n              chart.options.axisX.highLow = { low: project(x1, axisX), high: project(x2, axisX) };\n              chart.options.axisY.highLow = { low: project(y1, axisY), high: project(y2, axisY) };\n\n              if(options.noClipY && (options.autoZoomY.high || options.autoZoomY.low)){\n                var x_low = chart.options.axisX.highLow.low;\n                var x_high = chart.options.axisX.highLow.high;\n                var max_y = null;\n                var min_y = null;\n                var series = chart.data.series;\n                for(var i=0; i < series.length; ++i){\n                  var points = series[i].data;\n                  var l = binarySearch_x(points, x_low) + 1;\n                  for(var j=l; j < points.length; ++j){\n                    if(points[j].x > x_high) break;\n                    if(points[j].y > max_y || min_y == null) max_y = points[j].y;\n                    if(points[j].y < min_y || min_y == null) min_y = points[j].y;\n                  }\n                  var prev_j = Math.max(l-1, 0);\n                  if(min_y === max_y){\n                    max_y = Math.max(points[l].y, points[prev_j].y);\n                    min_y = Math.min(points[l].y, points[prev_j].y);\n                    if(min_y == max_y) max_y = min_y + 0.1; // prevents chartist from creating NaNs when range == 0 \n                  }\n                }\n                if( options.autoZoomY.high ) chart.options.axisY.highLow.high = max_y; \n                if( options.autoZoomY.low ) chart.options.axisY.highLow.low = min_y;\n              }\n              chart.update(chart.data, chart.options);\n              onZoom && onZoom(chart, reset);\n            }\n        }\n\n        function onMouseMove(event) {\n          if (downPosition) {\n            var point = position(event, svg);\n            if (isInRect(point, chartRect)) {\n              rect.attr(getRect(downPosition, point));\n              event.preventDefault();\n            }\n          }\n        }\n\n        function hide(rect) {\n          rect.attr({ style: 'display:none' });\n        }\n\n        function show(rect) {\n          rect.attr({ style: 'display:block' });\n        }\n\n        function getRect(firstPoint, secondPoint) {\n          var x = firstPoint.x;\n          var y = firstPoint.y;\n          var width = secondPoint.x - x;\n          var height = secondPoint.y - y;\n          if (width < 0) {\n            width = -width;\n            x = secondPoint.x;\n          }\n          if(options.noClipY){\n            y = chartRect.y2;\n            height = chartRect.y1 - y;\n          }\n          else if (height < 0) {\n            height = -height;\n            y = secondPoint.y;\n          }\n          return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n          };\n        }\n\n        function position(event, svg) {\n          return transform(event.clientX, event.clientY, svg);\n        }\n\n        function transform(x, y, svgElement) {\n          var svg = svgElement.tagName === 'svg' ? svgElement : svgElement.ownerSVGElement;\n          var matrix = svg.getScreenCTM();\n          var point = svg.createSVGPoint();\n          point.x = x;\n          point.y = y;\n          point = point.matrixTransform(matrix.inverse());\n          return point || { x: 0, y: 0 };\n        }\n\n        function project(value, axis) {\n          var max = axis.bounds.max;\n          var min = axis.bounds.min;\n          if (axis.scale && axis.scale.type === 'log') {\n            var base = axis.scale.base;\n            return Math.pow(base,\n                value * baseLog(max / min, base) / axis.axisLength) * min;\n          }\n          return (value * axis.bounds.range / axis.axisLength) + min;\n        }\n\n        function baseLog(val, base) {\n          return Math.log(val) / Math.log(base);\n        }\n\n        function binarySearch_x(ar, el) {\n          var m = 0;\n          var n = ar.length - 1;\n          while (m <= n) {\n            var k = (n + m) >> 1;\n            if (el > ar[k].x) {\n              m = k + 1;\n            } else if(el < ar[k].x) {\n              n = k - 1;\n            } else {\n              return k;\n            }\n          }\n          return m - 1;\n        }\n      };\n    };\n  } (window, document, Chartist));\n\n  return Chartist.plugins.zoom;\n\n}));\n"]}